@model VirtualLibrary.Models.Books

@{
    ViewBag.Title = "GetBook";
}

<div class="row">

    <div class="col-lg-2 col-lg-offset-1">

        @if (ViewBag.StatusMessage != null)
            {
            <div class="text-center top-padding">
                <h1 class="alert alert-danger">@ViewBag.StatusMessage</h1>
            </div>
        }


        @if (Model.image == null)
        {
            <img class="img-search-book" src="~/Content/images/no_available_image.png" alt="">
        }
        else
        {
            string imageBase64 = Convert.ToBase64String(Model.image);
            string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
            <img class="img-search-book" src="@imageSrc" />
        }
        <script>

            $(window).load(function () {
                $('.img-search-book').find('img').each(function () {
                    var imgClass = (this.width / this.height > 1) ? 'wide' : 'tall';
                    $(this).addClass(imgClass);
                });
            });
        </script>

    </div>
    <div class="col-lg-8">
        <div class="panel panel-info">
            <div class="panel-heading">
                <div class="row"><h2>@Html.DisplayFor(model => model.title)</h2> </div>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.description, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.DisplayFor(m => m.description)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.isbn, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.DisplayFor(m => m.isbn)
                        </div>
                    </div>
                </div>



                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.publisher, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.DisplayFor(m => m.publisher)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Author, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @foreach (var author in Model.Author)
                            {

                                var last = Model.Author.Last();
                                if (author.Equals(last))
                                {
                                    @Html.DisplayFor(model => author.author_name)
                                }
                                else
                                {
                                    @Html.DisplayFor(model => author.author_name) @(", ")
                                }

                            }


                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Category, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @foreach (var category in Model.Category)
                            {

                                var last = Model.Category.Last();
                                if (category.Equals(last))
                                {
                                    @Html.DisplayFor(model => category.Description)
                                }
                                else
                                {
                                    @Html.DisplayFor(model => category.Description) @(", ")
                                }

                            }


                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.views, new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @Html.DisplayFor(m => m.views)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group">
                        @Html.Label("Rating", new { @class = "col-lg-2 control-label" })
                        <div class="col-lg-10">
                            @{
                                var sum = 0;
                                foreach (var review in Model.Books_Ratings)
                                {
                                    sum += Convert.ToInt32(review.rating);
                                }
                                var average = Math.Round((Double)sum / Model.Books_Ratings.Count, 2);
                                @Html.DisplayFor(m => average)
                            }
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="row">
    @if (User.IsInRole("Admin") || User.IsInRole("Moderator") || User.IsInRole("User"))
    {
        <div class="col-lg-4 col-lg-offset-7">

            <div class="btn-group pull-right">
                <button class="btn btn-success" href="#reviews-anchor" id="open-review-box" data-toggle="tooltip" title="Review/Rate">
                    <i class="fa fa-comment-o fa-lg">
                    </i>
                    <strong>Leave a Review</strong>
                </button>

                <a class="btn btn-default" href="@Url.Action("Reserve", "Reservations",new {id = Model.id})" id="reserve_button" data-toggle="tooltip" title="Reserve Book">
                    <i class="fa fa-plus fa-lg"></i>
                    <strong>Reserve Book</strong>
                </a>
            </div>
        </div>

    }

</div>

<div class="row">
    <div class="panel col-lg-10 col-lg-offset-1">
        <div class="panel-heading">
            <h1><small class="pull-right">@Model.Books_Ratings.Count review</small> Reviews </h1>
        </div>
        <div class="row" id="post-review-box" style="display:none;">

            <div class="col-lg-12">
                @using (Ajax.BeginForm("Create", "Ratings", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "review-list" }))
                {
                    @Html.AntiForgeryToken()
                    <input id="ratings-hidden" name="rating" type="hidden">
                    <input id="bookid-hidden" name="bookID" type="hidden" value="@Model.id">
                    <textarea class="form-control animated" cols="50" id="new-review" name="comment" placeholder="Enter your review here..." rows="5"></textarea>

                                <div class="text-right">
                                    <div class="stars starrr" data-rating="0"></div>
                                    <a class="btn btn-danger btn-sm" href="#" id="close-review-box" style="display:none; margin-right: 10px;">
                                        <span class="glyphicon glyphicon-remove"></span>Cancel
                                    </a>
                                    <button id="save-review" class="btn btn-success btn-lg" type="submit">Save</button>
                                </div>
                }
            </div>
        </div>

        <div id="review-list" class="panel-body review-list">
            @Html.Action("GetRatings")
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/js/review.view.js")"></script>