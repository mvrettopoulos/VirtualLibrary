@model IEnumerable<VirtualLibrary.Models.Books>


@if (ViewBag.StatusMessage != null)
{
    <div class="row text-center">
        <p class="alert alert-danger">@ViewBag.StatusMessage</p>
    </div>
}

<div class="pagination_wrapper">
    <section id="pinBoot" class = "pagination_wrapper" style="visibility:hidden;>
            @foreach (var item in Model)
            {
                <article class="white-panel">

                    @if (item.image == null)
                    {
                        <img src="~/Content/images/no_available_image.png" alt="">
                    }
                    else
                    {
                        string imageBase64 = Convert.ToBase64String(item.image);
                        string imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                        <img src="@imageSrc" />
                    }

                    <h2>@Html.ActionLink(item.title, "GetBook", "Search", new { id = item.id }, null)</h2>
                    <h3 id="by_authors">
                        By
                        @foreach (var author in item.Author)
                {
                    var last = item.Author.Last();
                    if (author.Equals(last))
                    {
                                @Html.DisplayFor(modelItem => author.author_name)
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => author.author_name) @(", ")
                            }
                        }
                    </h3>

                </article>
            }
    </section>
</div>

<script src="@Url.Content("~/Scripts/js/home.view.js")"></script>
<script src="@Url.Content("~/Scripts/pagination.js")"></script>
<script type="text/javascript">
		jQuery(document).ready(function($) {
			$(".pagination_wrapper").paging({
				//Number of items to show per page
				//================================
				number_of_items: 10,	//default: 5 | takes: non-zero numeral less than total limit

				//pagination type
				//===============
				pagination_type: "full_numbers", // default full_numbers | takes: full_numbers | prev_next | first_prev_next_last

				//Number of buttons to show if in case of "full_numbers" pagination_type
				//======================================================================
				number_of_page_buttons: 3, //default 3 | takes: non-zero numeral less than total page size

				//Stealth Mode in case when no pagination should be shown but paginate using custom elements via pagination api
				//=============================================================================================================
				stealth_mode: false, //default false | takes: Boolean true | false

				//Color scheme
				//============
				theme: "light_connected", //default light_connected | takes: light_connected | light | blue | ""

				//animate
				//=======
				animate: true, //default true | takes: true | false

				//Callbacks
				//=========
				onBeforeInit: function(instance, $el) {},
				onAfterInit: function(instance, $el) {},
				onBeforeEveryDraw: function(instance, $pager) {},
				onAfterEveryDraw: function(instance, $pager) {},
				onFirstPage: function(instance, $pager) {},
				onLastPage: function(instance, $pager) {}
			});
		});
</script>
